자바스크립트에서 변수를 선언할 때는 변하지 않는 값은 const, 변할 수 있는 값은 let을 사용한다.
단, var가 최신 문법이며 둘의 차이는 중괄호를 기준으로 범위가 제한되는가 아닌가이다.

예로, 같은 스코프 내에 let과 var가 위치할 때 let은 가장 가까운 중괄호를 기준으로 자신의 범위를 제한한다.
반면 var는 가장 가까운 함수를 기준으로 자신의 범위를 제한한다.

이를 블록 레벨 스코프, 함수 레벨 스코프라고 부른다.

또, var는 선언하기 전에 사용할 수 있는데 자바스크립트 언어 특성상 가능한 것이라고 한다.
이러한 동작을 호이스팅이라 부른다.

다만, 값을 대입하는 시점은 실제 코드의 순서와 동일하다고 한다.
이게 무슨 말인가 하면, 변수의 선언과 변수의 초기화를 둘로 나누어 본다는 것이다.

일반적으로 변수를 선언하고 프로그램에서 변수에 메모리를 할당하면 이를 인스턴스화 되었다고 한다.
이는 곧, 메모리 공간을 가졌다는 뜻이다.

자바스크립트는 인스턴스화 된 변수를 undefined 값으로 초기화 하는데 일종의 알림 정도로 볼 수 있다.
단, var, const, let 모두 다른 방식으로 메모리를 할당하므로 위 얘기는 var에만 해당된다.

이제 const와 let의 할당 과정도 살펴보자.

먼저, let은 var와 유사하지만 값을 초기화 하지 않으므로 사용할 수 없는 상태로 생성된다.
곧, 참조 에러가 발생하는 이유이다.

const는 호이스팅에서 모든 동작이 이뤄진다.
값을 바꿀 수 없는 상수이기 때문에 호이스팅 동작에서 메모리를 할당하고 값을 대입하여야 한다.
